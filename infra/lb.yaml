AWSTemplateFormatVersion: "2010-09-09"
Description: Load balancer for the Hello service

Parameters:

    ExportPrefix:
        Type: String

    EnvironmentName:
        Type: String

Resources:

    # redirect http requests to https
    HTTPListener:
       Type: AWS::ElasticLoadBalancingV2::Listener
       Properties:
         LoadBalancerArn: !Ref LoadBalancer
         Port: 80
         Protocol: HTTP
         DefaultActions:
           -   Type: redirect
               RedirectConfig:
                   Protocol: HTTPS
                   Port: "443"
                   Host: "#{host}"
                   Path: "/#{path}"
                   Query: "#{query}"
                   StatusCode: "HTTP_301"  # i.e., permanent

    HTTPSListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Port: 443
            Protocol: HTTPS
            DefaultActions:
            -   Type: fixed-response
                FixedResponseConfig:
                    StatusCode: "444"
            Certificates:
            -   CertificateArn: !Ref Certificate

    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Type: application
            SecurityGroups:
            -   !Ref LBSecurityGroup
            Subnets:
            -   Fn::ImportValue:
                    !Sub "${ExportPrefix}-subnet1"
            -   Fn::ImportValue:
                    !Sub "${ExportPrefix}-subnet2"

    LBSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Load balancer
            VpcId:
                Fn::ImportValue:
                    !Sub "${ExportPrefix}-vpc"
            SecurityGroupIngress:
            -   Description: Public access to HTTP port
                CidrIp: 0.0.0.0/0
                IpProtocol: tcp
                FromPort: 80
                ToPort: 80
            -   Description: Public access to HTTPS port
                CidrIp: 0.0.0.0/0
                IpProtocol: tcp
                FromPort: 443
                ToPort: 443

    Certificate:
        Type: AWS::CertificateManager::Certificate
        DependsOn: RecordSet
        Properties:
            DomainName: !Sub ${EnvironmentName}.opslevel.staschuk.com
            ValidationMethod: DNS
            DomainValidationOptions:
            -   DomainName: !Sub ${EnvironmentName}.opslevel.staschuk.com
                HostedZoneId: !ImportValue hello-hosted-zone-id

    RecordSet:
        Type: AWS::Route53::RecordSet
        Properties:
            AliasTarget:
                DNSName: !GetAtt LoadBalancer.DNSName
                HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
            HostedZoneId: !ImportValue hello-hosted-zone-id
            Name: !Sub ${EnvironmentName}.opslevel.staschuk.com
            Type: A

